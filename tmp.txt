import json
import re

def parse_model_output(output_str):
    """
    解析大模型的输出，兼容两种格式：
    1. 纯JSON字符串：{"question": "...", ...}
    2. Markdown包裹：```json{...}``` 或 ```JSON{...}```
    
    Args:
        output_str: 模型输出的字符串
        
    Returns:
        解析后的字典对象
        
    Raises:
        ValueError: 当无法解析JSON时
    """
    # 情况1：尝试直接解析为JSON
    try:
        return json.loads(output_str)
    except json.JSONDecodeError:
        pass
    
    # 情况2：处理Markdown代码块包裹的JSON
    pattern = r'```(?:json)?\s*(\{[\s\S]*\})\s*```'
    match = re.search(pattern, output_str, re.IGNORECASE)
    
    if match:
        try:
            json_str = match.group(1)
            # 处理可能的转义问题
            json_str = json_str.replace('\\"', '"')
            return json.loads(json_str)
        except json.JSONDecodeError:
            pass
    
    # 如果两种格式都无法解析则抛出异常
    raise ValueError("无法解析的格式:\n" + output_str)

# 使用示例 ----------------------------------------------------
# 示例1: 直接JSON格式
output_direct = """
{
  "question": "根据文中内容，初始位置误差修正方法基于什么原理？",
  "choices_A": "轨道积分法",
  "choices_B": "微分修正法",
  "choices_C": "线性插值法",
  "choices_D": "神经网络法",
  "answer": "B",
  "anchor_points": "基于轨道微分修正法对初始位置误差进行修正..."
}
"""

# 示例2: Markdown包裹格式
output_markdown = """
以下是问题描述：
```json
{
  "question": "论文中初始位置误差的修正精度是多少？",
  "choices_A": "0.1%",
  "choices_B": "0.5%",
  "choices_C": "1.0%",
  "choices_D": "2.0%",
  "answer": "B",
  "anchor_points": "通过实验得出初始位置误差可修正至0.5%以内..."
}
