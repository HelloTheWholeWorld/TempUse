from tencentcloud.common import credential
from tencentcloud.common.profile.client_profile import ClientProfile
from tencentcloud.document.v20210526 import document_client, models

# 初始化凭证
cred = credential.Credential("YOUR_SECRET_ID", "YOUR_SECRET_KEY")
client_profile = ClientProfile()
client = document_client.DocumentClient(cred, "ap-shanghai", client_profile)  # 区域按需修改

# 创建新文档
req = models.CreateDocumentRequest()
req.DocumentName = "跨网协作文档"
req.Category = "text"  # 文本类型
resp = client.CreateDocument(req)
doc_id = resp.DocumentId  # 保存文档ID（关键！）
print(f"文档创建成功！ID: {doc_id}")



## 看
from tencentcloud.common import credential
from tencentcloud.document.v20210526 import document_client, models

def get_document_content(doc_id):
    cred = credential.Credential("YOUR_SECRET_ID", "YOUR_SECRET_KEY")
    client = document_client.DocumentClient(cred, "ap-shanghai")
    
    req = models.GetDocumentContentRequest()
    req.DocumentId = doc_id  # 传入外网创建的文档ID
    resp = client.GetDocumentContent(req)
    content = resp.Content  # 文档纯文本内容
    return content

# 调用示例
current_content = get_document_content("doc-xxxxxxxx")
print(current_content)



# push
def append_to_document(doc_id, new_text):
    cred = credential.Credential("YOUR_SECRET_ID", "YOUR_SECRET_KEY")
    client = document_client.DocumentClient(cred, "ap-shanghai")
    
    # 1. 获取当前内容
    current_content = get_document_content(doc_id)
    
    # 2. 追加新内容
    updated_content = current_content + "\n" + new_text
    
    # 3. 更新文档
    req = models.UpdateDocumentContentRequest()
    req.DocumentId = doc_id
    req.Content = updated_content
    resp = client.UpdateDocumentContent(req)
    return "内容追加成功！"

# 调用示例
append_to_document("doc-xxxxxxxx", "内网服务器新增数据")



